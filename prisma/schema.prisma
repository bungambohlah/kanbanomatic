// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
    referentialIntegrity = "prisma"
}

// Necessary for Next auth
model Account {
    id                String   @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt         DateTime @default(now())
    updatedAt         DateTime @default(now()) @updatedAt

    @@unique([provider, providerAccountId])
    @@index(userId)
    @@index(type)
    @@index(provider)
    @@index(providerAccountId)
    @@index(refresh_token)
    @@index(access_token)
    @@index(expires_at)
    @@index(token_type)
    @@index(scope)
    @@index(id_token)
    @@index(createdAt)
    @@index(updatedAt)
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt    DateTime @default(now())
    updatedAt    DateTime @default(now()) @updatedAt

    @@index(sessionToken)
    @@index(userId)
    @@index(expires)
    @@index(createdAt)
    @@index(updatedAt)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    lists         List[]
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @default(now()) @updatedAt

    @@index(name)
    @@index(email)
    @@index(emailVerified)
    @@index(image)
    @@index(createdAt)
    @@index(updatedAt)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @default(now()) @updatedAt

    @@unique([identifier, token])
    @@index(identifier)
    @@index(token)
    @@index(expires)
    @@index(createdAt)
    @@index(updatedAt)
}

model List {
    id        String   @id @default(cuid())
    name      String
    userId    String
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt

    @@unique([name, userId])
    @@index(name)
    @@index(userId)
    @@index(createdAt)
    @@index(updatedAt)
}
